name: CIntegration-Push
on:
  push:
    branches:
      - 'dev'
      - 'uat'
      - 'prod'

jobs:
  build-dev:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    environment: DEV
    steps:
    # monitor tool
    - name: Collect Workflow Telemetry
      uses: runforesight/foresight-workflow-kit-action@v1
      if: ${{ always() }}
      with:
        api_key: ${{ secrets.FORESIGHT_API_KEY }}
          
    - uses: actions/setup-python@v2
      with:
        python-version: 3.11
        
    - name: Install Libraries
      run: |
        pip install flake8 pytest pytest-cov pandas Flask Flask-MySQLdb Flask-SQLAlchemy PyMySQL SQLAlchemy
        
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        repository: DevOps-Team4-2022/DevOps_Oct2022_Team4_Assignment   
        
    - name: test with pytest
      run: |
        pytest tests/test_*.py -v -cov --junitxml=dev_report.xml
        pytest --cov=tests/ --cov-report=xml:dev_coverage.xml
        
    # monitoring tool - analyze test and coverage
    - name: Analyze Test
      uses: runforesight/foresight-test-kit-action@v1
      if: ${{ always() }}
      with:
        api_key: ${{ secrets.FORESIGHT_API_KEY }}
        test_format: JUNIT
        test_framework: PYTEST
        test_path: dev_report.xml
        coverage_format: JACOCO/XML
        coverage_path: dev_coverage.xml
        
    - if: ${{ failure() }}
      uses: JasonEtco/create-an-issue@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        assignees: ${{ github.actor }}
        update_existing: true
        search_existing: all
  
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action/composite@v2
      if: always()
      with:
        junit_files: "dev_report.xml"
    
    - name: send report xml on push
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          ${{ github.actor }} has just pushed to DEV.
          Commit message: ${{ github.event.commits[0].message }}
          Repository: ${{ github.repository }}
          See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
          
          Below are the test report:
        document: dev_report.xml
    
  build-uat:
    if: github.ref == 'refs/heads/uat'
    runs-on: ubuntu-latest
    environment: UAT
    steps:
    # monitor tool
    - name: Collect Workflow Telemetry
      uses: runforesight/foresight-workflow-kit-action@v1
      if: ${{ always() }}
      with:
        api_key: ${{ secrets.FORESIGHT_API_KEY }}
        
    - uses: actions/setup-python@v2
      with:
        python-version: 3.11
        
    - name: Install Libraries
      run: |
        pip install flake8 pytest pytest-cov pandas Flask Flask-MySQLdb Flask-SQLAlchemy PyMySQL SQLAlchemy
        
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        repository: DevOps-Team4-2022/DevOps_Oct2022_Team4_Assignment
        
    - name: test with pytest
      run: |
        pytest tests/test_*.py -v -cov --junitxml=uat_report.xml
        pytest --cov=tests/ --cov-report=xml:uat_coverage.xml
        
    # monitoring tool - analyze test and coverage
    - name: Analyze Test
      uses: runforesight/foresight-test-kit-action@v1
      if: ${{ always() }}
      with:
        api_key: ${{ secrets.FORESIGHT_API_KEY }}
        test_format: JUNIT
        test_framework: PYTEST
        test_path: uat_report.xml
        coverage_format: JACOCO/XML
        coverage_path: uat_coverage.xml
        
    - if: ${{ failure() }}
      uses: JasonEtco/create-an-issue@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        assignees: ${{ github.actor }}
        update_existing: true
        search_existing: all
  
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action/composite@v2
      if: always()
      with:
        junit_files: "uat_report.xml"
    
    - name: send report xml on push
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          ${{ github.actor }} has just pushed to UAT.
          Commit message: ${{ github.event.commits[0].message }}
          Repository: ${{ github.repository }}
          See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
          
          Below are the test report:
        document: uat_report.xml
        
  build-prod:
    if: github.ref == 'refs/heads/prod'
    runs-on: ubuntu-latest
    environment: PROD
    steps:
    # monitor tool
    - name: Collect Workflow Telemetry
      uses: runforesight/foresight-workflow-kit-action@v1
      if: ${{ always() }}
      with:
        api_key: ${{ secrets.FORESIGHT_API_KEY }}
        
    - uses: actions/setup-python@v2
      with:
        python-version: 3.11
        
    - name: Install Libraries
      run: |
        pip install flake8 pytest pytest-cov pandas Flask Flask-MySQLdb Flask-SQLAlchemy PyMySQL SQLAlchemy
        
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        repository: DevOps-Team4-2022/DevOps_Oct2022_Team4_Assignment   
        
    - name: test with pytest
      run: |
        pytest tests/test_*.py -v -cov --junitxml=prod_report.xml
        pytest --cov=tests/ --cov-report=xml:prod_coverage.xml
        
    # monitoring tool - analyze test and coverage
    - name: Analyze Test
      uses: runforesight/foresight-test-kit-action@v1
      if: ${{ always() }}
      with:
        api_key: ${{ secrets.FORESIGHT_API_KEY }}
        test_format: JUNIT
        test_framework: PYTEST
        test_path: prod_report.xml
        coverage_format: JACOCO/XML
        coverage_path: prod_coverage.xml
        
    - if: ${{ failure() }}
      uses: JasonEtco/create-an-issue@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        assignees: ${{ github.actor }}
        update_existing: true
        search_existing: all
  
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action/composite@v2
      if: always()
      with:
        junit_files: "prod_report.xml"
    
    - name: send report xml on push
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          ${{ github.actor }} has just pushed to PROD.
          Commit message: ${{ github.event.commits[0].message }}
          Repository: ${{ github.repository }}
          See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
          
          Below are the test report:
        document: prod_report.xml
